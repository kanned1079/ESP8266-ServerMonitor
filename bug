#include <ioCC2530.h>
#include <string.h>

#define	uint unsigned int
#define	uchar unsigned char 
uint temp, RXTXflag


#define LED1 P1_0
#define LED2 P1_1

void Delay_ms(uint); 
void initUART(void);
void UartSend_String(char *Data,int len);

char Txdata[14];	

void Delay_ms(uint n)
{
  uint i,j; 
  for(i=0;i<n;i++)
    { 
      for(j=0;j<1774;j++);
    }
}

void InitLed()
{
  P1DIR = 0x01;	
  LED1 = 1;	
}

void InitUART(void)
{
  CLKCONCMD &= ~0x40;	// 设置系统时钟源为 32MHZ 晶振 
  while(CLKCONSTA & 0x40);	// 等待晶振稳定
  CLKCONCMD &= ~0x47;	// 设置系统主时钟频率为 32MHZ
  
  PERCFG = 0x00;	//位置 1 P0 口
  P0SEL = 0x3c;	//P0_2,P0_3,P0_4,P0_5 用作串口,第二功能
  P2DIR &= ~0XC0;	//P0 优先作为 UART0 ，优先级

  U0CSR |= 0x80;		//UART 方式 
  U0GCR |= 11;	//U0GCR 与 U0BAUD 配合
  U0BAUD |= 216;	// 波特率设为 115200
  UTX0IF = 0;	//UART0 TX 中断标志初始置位 1	（收发时候） 
  U0CSR |= 0X40;	//允许接收
  IEN0 |= 0x84;	// 开总中断，接收中断
}

void Uart_Send_String(char *Data,int len)
{
  {
    int j; 
    for(j=0;j<len;j++)
      {
        U0DBUF = *Data++;
        while(UTX0IF == 0);	//发送完成标志位 
        UTX0IF = 0;
      }
  }
}

void main(void)
{
  uchar Rxdata[10];
  uint datanumber = 0;
  InitLed();	//调用初始化函数 
  InitUART();
  while(1)
  {
    if(RXTXflag == 1)	//接收状态
      {
        LED1=1;	//接收状态指示 
        if(temp != 0)
          {
            if((temp!='#')&&(datanumber<50)) //'＃'被定义为结束字符，最多能接收 50 个字 符
              Rxdata[datanumber++] = temp; 
            else
              {
                RXTXflag = 3;	//进入发送状态
                LED1=0;	//关指示灯
              }
            temp = 0;
          }
       }

      if(RXTXflag == 3)	//发送状态
        {

          LED2= 1;
          U0CSR &= ~0x40;	//禁止接收 
          Uart_Send_String(Rxdata,datanumber); //发送已记录的字符串。 
          U0CSR |= 0x40;	//允许接收
          RXTXflag = 1;	// 恢复到接收状态 
          datanumber = 0;	//指针归 0
          LED2 = 0;	//关发送指示
         }
  }
}
#pragma vector = URX0_VECTOR
__interrupt void UART0_ISR(void)
{
  URX0IF = 0;	// 清中断标志 
  temp = U0DBUF;
}
